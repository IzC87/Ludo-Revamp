// <auto-generated />
using System;
using GameEngine.Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameEngine.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200501105723_NumberOfPlayersAdded")]
    partial class NumberOfPlayersAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameEngine.Classes.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GameCreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnType("int");

                    b.HasKey("GameID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameEngine.Classes.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Computer")
                        .HasColumnType("bit");

                    b.Property<int>("DieRoll")
                        .HasColumnType("int");

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<bool>("HasFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("MyTurn")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfRolls")
                        .HasColumnType("int");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("GameID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameEngine.Classes.Token", b =>
                {
                    b.Property<int>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnFinishLine")
                        .HasColumnType("bit");

                    b.Property<int>("MovedSteps")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int>("TokenNumber")
                        .HasColumnType("int");

                    b.HasKey("TokenID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("GameEngine.Classes.Player", b =>
                {
                    b.HasOne("GameEngine.Classes.Game", null)
                        .WithMany("Players")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("GameEngine.Classes.Token", b =>
                {
                    b.HasOne("GameEngine.Classes.Player", null)
                        .WithMany("Tokens")
                        .HasForeignKey("PlayerID");
                });
#pragma warning restore 612, 618
        }
    }
}
